priors %>%
select(1:7) %>%
slice(1:23) %>%
gt(rowname_col = "model") %>%
tab_stubhead(label = "model") %>%
fmt_number(columns = 5:7,
decimals = 1) %>%
tab_style(style = cell_fill(color = "skyblue"),
locations = cells_body(rows = 8, 20)) %>%
tab_header(title = "Model Specifications")
priors %>%
select(1:7) %>%
slice(1:23) %>%
gt(rowname_col = "model") %>%
tab_stubhead(label = "model") %>%
fmt_number(columns = 5:7,
decimals = 1) %>%
tab_style(style = cell_fill(color = "skyblue"),
locations = cells_body(rows = c(8, 20))) %>%
tab_header(title = "Model Specifications")
# Dugong data
N <- 27
x <- c(1, 1.5, 1.5, 1.5, 2.5, 4, 5, 5, 7, 8, 8.5, 9, 9.5, 9.5, 10,
12, 12, 13, 13, 14.5, 15.5, 15.5, 16.5, 17, 22.5, 29, 31.5)
Y <- c(1.8, 1.85, 1.87, 1.77, 2.02, 2.27, 2.15, 2.26, 2.47, 2.19,
2.26, 2.4, 2.39, 2.41, 2.5, 2.32, 2.32, 2.43, 2.47, 2.56, 2.65,
2.47, 2.64, 2.56, 2.7, 2.72, 2.57)
X0 <- 10
# notice how the log transformation is included here.
data_reg <- list(N = N, x = log(x), Y = Y, x0 = log(X0))
# fit the Bayesian Regression Analysis on your own
stdug <- stan(file = (here("05","data", "dugongs_linear.stan")),
data = data_reg,
chains = 4, warmup = 100, iter = 5000)
# fit the Bayesian Regression Analysis on your own
stdug <- stan(file = (here("05","script", "dugongs_linear.stan")),
data = data_reg,
chains = 4, warmup = 100, iter = 5000)
saveRDS(stdug, "stdug.RDS")
saveRDS(stdug, here("stdug.RDS"))
# quick convergence diag
stdug %>% monitor()
stdug %>% rstan::traceplot()
# beta = slope
stdug %>% gather_variables()
stdug %>%
gather_draws(beta) %>%
geom_plot(aes(x = .value)) +
stat_halfeye()
stdug %>%
gather_draws(beta) %>%
ggplot(aes(x = .value, y = .variable)) +
stat_halfeye()
stdug %>%
gather_draws(beta) %>%
ggplot(aes(x = .value, y = .variable)) +
stat_halfeye(fill = "grey50")
stdug %>%
gather_draws(beta) %>%
median_qi()
stdug %>%
spread_draws(beta)
stdug %>%
spread_draws(beta) %>%
median_qi()
stdug %>%
spread_draws(beta) %>%
median_qi(.data = c(0.05, 0.50, 0.95))
stdug %>%
fit_draws(beta) %>%
median_qi(.data = c(0.05, 0.50, 0.95))
stdug %>%
gather_draws(beta) %>%
median_qi(.data = c(0.05, 0.50, 0.95))
stdug %>%
gather_draws(beta) %>%
median_qi(.width = c(0.05, 0.50, 0.95))
stdug %>%
spread_draws(beta) %>%
median_qi(.width = c(0.05, 0.50, 0.95))
stdug %>%
gather_draws(beta) %>%
quantile()
stdug %>%
gather_draws(beta) %>%
summary()
stdug %>%
gather_draws(beta) %>%
summarize(beta)
stdug %>%
gather_draws(beta) %>%
summarize()
stdug %>%
gather_draws(beta) %>%
summarize(quartile())
stdug %>%
gather_draws(beta) %>%
summarize(summary = quartile())
stdug %>%
gather_draws(beta) %>%
median_hdci()
?median_qi
stdug %>%
gather_draws(beta) %>%
median_hdci()
stdug %>%
gather_draws(beta) %>%
median_hdci(.wdith = c(.50, .80, .95))
stdug %>%
gather_draws(beta) %>%
median_hdci(.width = c(.50, .80, .95))
stdug %>%
gather_draws(beta) %>%
median_hdci(.width = c(.50, .80, .95)) %>%
stat_interval()
stdug %>%
gather_draws(beta) %>%
median_hdci(.width = c(.50, .80, .95)) %>%
ggplot(aes(x = .variable)) +
stat_interval()
stdug %>%
gather_draws(beta) %>%
median_hdci(.width = c(.50, .80, .95)) %>%
ggplot(aes(x = .value)) +
stat_interval()
stdug %>%
gather_draws(beta) %>%
median_hdci(.width = c(.50, .80, .95))
stdug %>%
gather_draws(beta) %>%
mode_qi(.width = c(.50, .80, .95))
stdug %>%
gather_draws(beta) %>%
point_interval(.width = c(.50, .80, .95))
stdug %>%
gather_draws(beta) %>%
summarise(stdev = sd(.value))
stdug %>%
gather_draws(beta) %>%
summarise(stdev = sd(.value),
summary = median_qi(.value))
stdug %>%
gather_draws(beta) %>%
summarise(stdev = sd(.value),
median_qi(.value))
stdug %>%
gather_draws(beta) %>%
summarise(median_qi(.value),
stdev = sd(.value))
stdug %>%
gather_draws(beta) %>%
ggplot(aes(x = .value, y = .variable)) +
stat_halfeye(fill = "grey50")
stdug %>%
gather_draws(alpha) %>%
ggplot(aes(x = .value, y = .variable)) +
stat_halfeye(fill = "skyblue")
stdug %>%
monitor() %>%
tidy()
stdug %>%
monitor() %>%
tidy() %>%
gt()
stdug %>% monitor()
stdug %>% monitor(alpha)
stdug %>%
gather_draws(beta) %>%
summarise(median_qi(.value),
stdev = sd(.value))
?median_qi
stdug %>%
gather_draws(beta) %>%
summarise(median_qi(.value, simple_names = TRUE),
stdev = sd(.value))
stdug %>%
gather_draws(beta) %>%
summarise(median_qi(.value, simple_names = FALSE),
stdev = sd(.value))
stdug %>%
summary()
stdug %>%
summary() %>%
tidy()
stdug %>%
summary() %>%
gt()
?monitor
stdug %>% monitor(print = TRUE)
stdug %>% extract()
stdug %>% extract(beta)
stdug %>%
gather_draws(beta) %>%
summarise(median_qi(),
stddev = sd())
stdug %>%
gather_draws(beta) %>%
summarise(median_qi(.value),
stddev = sd(.value))
stdug %>%
gather_draws(beta) %>%
ggplot(aes(x = .value, y = .variable)) +
stat_halfeye(fill = "mintgreen")
stdug %>%
gather_draws(beta) %>%
ggplot(aes(x = .value, y = .variable)) +
stat_halfeye(fill = "orchid")
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value)) +
stat_halfeye(fill = "skyblue")
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value, color = .variable)) +
stat_halfeye(fill = "skyblue")
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value, color = .variable)) +
stat_halfeye(fill = "variable")
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value, color = .variable, fill = .variable)) +
stat_halfeye()
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value, color = .black, fill = .variable)) +
stat_halfeye()
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value, color = "black", fill = .variable)) +
stat_halfeye()
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value, color = "black")) +
stat_halfeye(fill = .variable)
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value, fill = .variable)) +
stat_halfeye(color = "black")
stdug %>%
gather_draws(alpha) %>%
ggplot(aes(x = .value, fill = .variable)) +
stat_halfeye(color = "black")
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value, fill = .variable)) +
stat_halfeye(color = "black")
stdug %>%
gather_draws(alpha) %>%
ggplot(aes(x = .value)) +
stat_halfeye(fill = "seagreen1")
stdug %>%
gather_draws(beta) %>%
ggplot(aes(x = .value, y = .variable)) +
stat_halfeye(fill = "orchid")
stdug %>%
gather_draws(beta) %>%
ggplot(aes(x = .value)) +
stat_halfeye(fill = "orchid")
stdug %>%
gather_draws(alpha, beta) %>%
ggplot(aes(x = .value, fill = .variable)) +
stat_halfeye(color = "black")
# create plot of all models to explore differences of posterior dist
priors %>%
ggplot(aes(y = q50 , ymin = q2.5, ymax = q97.5,
x = as_factor(model),
color = posterior_dist)) +
geom_pointrange(inherit.aes = TRUE,
position = position_dodge(width = 0.4)) +
scale_color_discrete(name = "posterior distribution") +
labs(title = "Lab 4: Influence of prior parameters",
subtitle = "on estimated mean difference and variance ratio",
x = "model",
y = "estimate")
priors %>%
ggplot(aes(y = q50 , ymin = q2.5, ymax = q97.5,
x = as_factor(model),
color = posterior_dist)) +
geom_pointrange(inherit.aes = TRUE,
position = position_dodge(width = 0.4)) +
scale_color_discrete(name = "posterior distribution") +
labs(title = "Lab 4: Influence of prior parameters",
subtitle = "on estimated mean difference and variance ratio",
x = "model",
y = "estimate") +
coord_flip()
install.packages("stars")
install.packages(c("broom", "cpp11", "data.table", "digest", "doParallel", "DT", "e1071", "foreach", "Formula", "iterators", "labeling", "quantreg", "RcppArmadillo", "recipes", "rgdal", "servr", "statmod"))
library(tidyverse)
library(palmerpenguins)
penguins <- penguins
penguins <- penguins %>%
drop_na()
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point()
ggplot(diamonds, aes(carat, price)) + geom_point()
ggplot(economics, aes(date, unemploy)) + geom_line()
ggplot(mpg, aes(cty)) + geom_histogram()
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm,
color = species)) +
geom_point()
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm,
shape = island)) +
geom_point()
penguins %>%
penguins %>%
penguins %>%
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm,
size = sex)) +
geom_point()
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm,
size = sex)) +
geom_point(alpha = 0.3)
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point() +
facet_wrap(~species)
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point() +
geom_smooth()
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point() +
geom_smooth(method = "lm")
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm,
color = species)) +
geom_point() +
geom_smooth(method = "lm")
penguins %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm,
color = island)) +
geom_point() +
geom_smooth(method = "lm")
penguins %>%
ggplot(aes(x = species, y = body_mass_g)) +
geom_jitter()
penguins %>%
ggplot(aes(x = species, y = body_mass_g)) +
geom_point()
penguins %>%
ggplot(aes(x = species, y = body_mass_g)) +
geom_boxplot()
penguins %>%
ggplot(aes(x = species, y = body_mass_g)) +
geom_violin()
penguins %>%
ggplot(aes(x = body_mass_g)) +
geom_freqpoly()
penguins %>%
ggplot(aes(x = body_mass_g)) +
geom_freqpoly(fill = "skyblue")
penguins %>%
ggplot(aes(x = body_mass_g)) +
geom_freqpoly(bins = 50)
penguins %>%
ggplot(aes(x = species)) +
geom_bar()
---
title: "PGIS + ESS WoS Search"
author: "Nan Nourn"
date: "11/3/2020"
output: html_document
editor_options:
chunk_output_type: console
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(gt)
options(width = 75)
```
```{r message = FALSE, warning = FALSE, fig.align = 'center'}
library(here)
library(tidyverse)
library(gt)
here()
pgis <- read_csv(here("pgis_ess_wos_2020-11-03.csv"))
pgis <- pgis %>%
mutate(publication_type = as_factor(publication_type),
publication_name = as_factor(publication_name),
publication_name = str_to_title(publication_name, locale = "en"),
published_year = as_factor(published_year),
total_times_cited_count = as.integer(total_times_cited_count),
digital_object_identifier = as.character(digital_object_identifier))
setwd("~/OneDrive - Michigan State University/Manuscript/PGIS")
---
title: "PGIS + ESS WoS Search"
author: "Nan Nourn"
date: "11/3/2020"
output: html_document
editor_options:
chunk_output_type: console
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(gt)
options(width = 75)
```
```{r message = FALSE, warning = FALSE, fig.align = 'center'}
library(here)
library(tidyverse)
library(gt)
pgis <- read_csv(here("pgis_ess_wos_2020-11-03.csv"))
pgis <- pgis %>%
mutate(publication_type = as_factor(publication_type),
publication_name = as_factor(publication_name),
publication_name = str_to_title(publication_name, locale = "en"),
published_year = as_factor(published_year),
total_times_cited_count = as.integer(total_times_cited_count),
digital_object_identifier = as.character(digital_object_identifier))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(gt)
options(width = 75)
library(here)
library(tidyverse)
library(gt)
pgis <- read_csv(here("pgis_ess_wos_2020-11-03.csv"))
here()
setwd("~/OneDrive - Michigan State University/Manuscript/PGIS")
library(here)
library(tidyverse)
library(gt)
here()
pgis <- read_csv(here("pgis_ess_wos_2020-11-03.csv"))
setwd("~/OneDrive - Michigan State University/Manuscript/PGIS")
pgis <- read_csv(here("pgis_ess_wos_2020-11-03.csv"))
pgis <- read_csv(here("pgis_ess_wos_2020-11-03.csv"))
setwd("~/OneDrive - Michigan State University/Manuscript/PGIS")
here()
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(gt)
options(width = 75)
pgis <- read_csv(here("pgis_ess_wos_2020-11-03.csv"))
setwd("~/OneDrive - Michigan State University/Manuscript/PGIS")
pgis <- read_csv("pgis_ess_wos_2020-11-03.csv")
pgis <- pgis %>%
mutate(publication_type = as_factor(publication_type),
publication_name = as_factor(publication_name),
publication_name = str_to_title(publication_name, locale = "en"),
published_year = as_factor(published_year),
total_times_cited_count = as.integer(total_times_cited_count),
digital_object_identifier = as.character(digital_object_identifier))
pgis %>%
filter(publication_type=="J") %>%
group_by(publication_name) %>%
count(published_year, count = n()) %>%
ungroup() %>%
mutate(publication_name = fct_reorder(publication_name, count)) %>%
ggplot(aes(publication_name, n, fill = published_year)) +
geom_col() +
coord_flip() +
scale_fill_viridis_d(name = "Year Published",
direction = -1) +
theme(legend.position = "bottom") +
labs(title = "PGIS + ESS Most Common Journals",
y = "count",
x = "publication")
pgis %>%
filter(publication_type=="J") %>%
count(title, publication_name, author, published_year,
digital_object_identifier, abstract,
wt = total_times_cited_count,
name = "cited", sort = TRUE) %>%
rename(Title = title,
Publication = publication_name,
Authors = author,
Year = published_year,
DOI = digital_object_identifier,
Abstract = abstract) %>%
gt() %>%
tab_header(title = "PGIS + ESS Most Cited Publications")
pgis %>%
filter(publication_type=="J") %>%
count(title, publication_name, author, published_year,
digital_object_identifier, abstract,
wt = total_times_cited_count,
name = "cited", sort = TRUE) %>%
rename(Title = title,
Publication = publication_name,
Authors = author,
Year = published_year,
DOI = digital_object_identifier) %>%
gt() %>%
tab_header(title = "PGIS + ESS Most Cited Publications")
pgis %>%
filter(publication_type=="J") %>%
count(title, publication_name, author, published_year,
digital_object_identifier,
wt = total_times_cited_count,
name = "cited", sort = TRUE) %>%
rename(Title = title,
Publication = publication_name,
Authors = author,
Year = published_year,
DOI = digital_object_identifier) %>%
gt() %>%
tab_header(title = "PGIS + ESS Most Cited Publications")
